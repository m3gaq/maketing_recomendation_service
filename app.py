# embed streamlit docs in a streamlit app
import streamlit as st    
import pandas as pd 
import numpy as np         
import plotly.express as px
import pickle as pkl
import re
from pytrends.request import TrendReq

from our_parser import web_parse
import our_tools

def main():

    plt_topbar = pkl.load(open('plt_topbar.pkl','rb'))
    plt_topscat = pkl.load(open('plt_topscat.pkl','rb'))
    plt_product = pkl.load(open('plt_product.pkl','rb'))


    st.sidebar.title('Web Marketing Intelligence')
    st.title('Web Marketing Intelligence')
    instruments = ['–ê–Ω–∞–ª–∏–∑ —Å—Ö–æ–∂–µ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π –±–∞–∑—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∫–∞–Ω–∞–ª–æ–≤',
                   '–ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã—Ö —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–∞—Ö',
                   '–ú—ç—Ç—á–∏–Ω–≥ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –±–∞–Ω–∫–∞ —Å –∫–∞–Ω–∞–ª–∞–º–∏ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è',
                   '–¢—Ä–µ–Ω–¥—ã –≤ –≤–µ–± –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Ç–≤–µ',
                   '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å–µ—â–µ–Ω–∏–π —Å–∞–π—Ç–æ–≤']

    selected_instruments = st.sidebar.multiselect('–í—ã–±–µ—Ä–µ—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç',instruments,instruments[:2])
    @st.cache
    def get_related(df):
        if df.size > 0:
            related = ""
            for q in df.head(3)['query'].unique():
                related += q + ', '
            return(re.sub(r',\s$', '', related))
        else:
            return("No related queries found")

    @st.cache
    def get_top(country):
        if len(country.split()) == 1:
            ds = pytrend.trending_searches(pn=country.lower())
            ds.columns = ['trends']
            return ds.head(10).trends.unique()
        else:
            joined_name = ""
            for w in country.split():
                joined_name += w + "_"
            joined_name = re.sub(r'_$', '', joined_name)

            ds = pytrend.trending_searches(pn=joined_name.lower())
            ds.columns = ['trends']
            return ds.head(10).trends.unique()

    @st.cache
    def get_interest_over_time(pytrend):
        return pytrend.interest_over_time()

    st.write('Web Marketing Intelligence —Å–µ—Ä–≤–∏—Å –ü–ê–û ¬´–ë–∞–Ω–∫ –£—Ä–∞–ª—Å–∏–±¬ª –æ—Ç –∫–æ–º–∞–Ω–¥—ã MegaQuant.')

    if '–ê–Ω–∞–ª–∏–∑ —Å—Ö–æ–∂–µ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π –±–∞–∑—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∫–∞–Ω–∞–ª–æ–≤' in selected_instruments:
        st.write('## –ê–Ω–∞–ª–∏–∑ —Å—Ö–æ–∂–µ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π –±–∞–∑—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∫–∞–Ω–∞–ª–æ–≤')
        st.write(plt_topbar)
        st.write(plt_topscat)

    if '–ú—ç—Ç—á–∏–Ω–≥ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –±–∞–Ω–∫–∞ —Å –∫–∞–Ω–∞–ª–∞–º–∏ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è' in selected_instruments:
        st.write('## –ú—ç—Ç—á–∏–Ω–≥ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –±–∞–Ω–∫–∞ —Å –∫–∞–Ω–∞–ª–∞–º–∏ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è')
        file = st.file_uploader('–î–∞–π—Ç–µ csv —Ñ–∞–π–ª —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∫–∞–Ω–∞–ª–æ–≤',type=['csv'])
        if file is not None: 
            data_social_media = pd.read_csv(file)
            one_hot_df = our_tools.match_user_product(data_social_media)
            plt_user_product = px.bar(one_hot_df.groupby('channel_id').mean(),our_tools.products)
            st.write(plt_user_product)
        else:
            st.info(
                f"""
                    üëÜ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å [channel_users.csv](https://hse.kamran.uz/share/channel_users.csv)
                    """
            )
            st.write(plt_product)

    if '–ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã—Ö —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–∞—Ö' in selected_instruments:
        st.write('## –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã—Ö —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–∞—Ö')
        file = st.file_uploader('–î–∞–π—Ç–µ csv –ø–æ —Ä–µ–∫–ª–∞–º–Ω—ã–º –∫–æ–º–ø–∞–Ω–∏–µ—è–º –≤ –∫–∞–Ω–∞–ª–∞—Ö',type=['csv'])
        if file is not None:
            df_ = pd.read_csv(file)
            st.write(our_tools.plt_historic_data(df_))
            st.write(our_tools.plt_historic_data_returns(df_))
            st.write(our_tools.plt_historic_data_gender(df_))
            st.write(our_tools.rfm_query(df_))
        else:
            st.info(
                f"""
                    üëÜ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å [channel_products.csv](https://hse.kamran.uz/share/channel_products.csv)
                    """
            )


    if '–¢—Ä–µ–Ω–¥—ã –≤ –≤–µ–± –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Ç–≤–µ' in selected_instruments:
        st.write('## –¢—Ä–µ–Ω–¥—ã –≤ –≤–µ–± –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Ç–≤–µ')
        pytrend = TrendReq()
        country = 'russia'
        col, col1, col2, col3, col4 = st.columns(5)
        with col:
            topic  = st.text_input('—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∞', '–£—Ä–∞–ª—Å–∏–±')
        with col1:
            topic1 = st.text_input('—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∞ ‚Ññ1', '–¢–∏–Ω—å–∫–æ—Ñ—Ñ')
        with col2:
            topic2 = st.text_input('—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∞ ‚Ññ2', '–†–æ—Å–±–∞–Ω–∫')
        with col3:
            topic3 = st.text_input('—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∞ ‚Ññ3', '–ë–∞–Ω–∫ –ö—É–∑–Ω–µ—Ü–∫–∏–π')
        with col4:
            topic4 = st.text_input('—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∞ ‚Ññ4', '–ú–ö–ë')

        kw_list = [topic,topic1,topic2,topic3,topic4]
        pytrend.build_payload(kw_list=kw_list, geo='RU')

        interest_over_time_df = get_interest_over_time(pytrend)

        st.write(px.line(interest_over_time_df.drop(columns='isPartial')))

        st.write(f'–°–µ–π—á–∞—Å –Ω–∞–±–∏—Ä–∞–µ—Ç –∏–Ω—Ç–µ—Ä–µ—Å:')

        interest_by_region_df = pytrend.interest_by_region()
        tops_one = get_top(country)

        for t in tops_one:
            with st.expander(f'{np.where(tops_one == t)[0] + 1} {t}'):

                if st.checkbox('–ü–æ–∫–∞–∑–∞—Ç—å —Å–≤—è–∑–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã', key=f'{t}one'):
                    pytrend.build_payload(kw_list=[t])
                    related_queries = pytrend.related_queries()
                    rising = pd.DataFrame(data=related_queries.get(t).get('rising'))
                    st.write(get_related(rising))

    if '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å–µ—â–µ–Ω–∏–π —Å–∞–π—Ç–æ–≤' in selected_instruments:
        st.write('## –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å–µ—â–µ–Ω–∏–π —Å–∞–π—Ç–æ–≤')    
        col, col1, col2 = st.columns(3)
        with col:
            web_site  = st.text_input('—Å–∞–π—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞', 'www.uralsib.ru')

        st.write(web_parse(web_site))



if __name__ == '__main__':
    main()
